@use "sass:math";

@mixin media-query($bpt) {
    @if map_has_key($screen-width, $bpt)
    {
        @media (min-width: #{map_get($screen-width, $bpt)}px) {
            @content;
        }
    } @else {
        @error 'No breakpoint named #{$bpt}';
    }
}

@mixin media-query-max($bpt) {
    $max-bpt: calc($bpt - 1);

    @if map_has_key($screen-width, $bpt) {
        @media (max-width: #{map_get($screen-width, $bpt)}px) {
            @content;
        }
    } @else {
        @error 'No breakpoint named #{$bpt}';
    }
}

@mixin media-query-mobile-small-only {
    @media (width <= 374px) {
        @content;
    }
}

@mixin media-query-mobile-only {
    @media (width <= 767px) {
        @content;
    }
}

@mixin media-query-tablet-only {
    @media (width >= 768px) and (width <= 1279px) {
        @content;
    }
}

@mixin rules-display($screen: null) {
    @each $className,
    $_ in $rules-display {
        $prefixed-class-name: if($screen, '#{$screen}\\:#{$className}', '#{$className}');

        .#{$prefixed-class-name} {
            @each $rule,
            $value in map_get($rules-display, $className) {
                #{$rule}: #{$value};
            }
        }
    }
}

@mixin position-stretching($position: absolute, $z-index: null) {
    position: $position;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    @if $z-index {
        z-index: $z-index;
    }
}

@mixin object-fit($fit: fill, $position: null) {
    object-fit: $fit;

    @if $position {
        font-family: "object-fit: #{$fit}; object-position: #{$position}";
        object-position: $position;
    } @else {
        font-family: "object-fit: #{$fit}";
    }
}

@mixin text-props($fontSize, $lineHeight, $fontWeight: null, $fontFamily: null, $fontStyle: null) {
    font-size: rem($fontSize);
    line-height: math.div($lineHeight, $fontSize);

    @if $fontFamily {
        font-family: $fontFamily;
    }

    @if $fontWeight {
        font-weight: $fontWeight;
    }

    @if $fontStyle {
        font-style: $fontStyle;
    }
}

@mixin text-truncate-by-row($row: 2) {
    display: -webkit-box;
    -webkit-line-clamp: $row;
    -webkit-box-orient: vertical;

    overflow: hidden;

    text-overflow: ellipsis;
}

@mixin text-truncate() {
    overflow: hidden;

    text-overflow: ellipsis;
}
